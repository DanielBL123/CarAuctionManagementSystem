// <auto-generated />
using CarAuction.Sql.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarAuction.Sql.Migrations
{
    [DbContext(typeof(CarAuctionSqlDbContext))]
    [Migration("20250731230914_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CarAuction.Model.BaseEntities.BaseVehicleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("StartingBid")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BaseVehicleEntity");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("CarAuction.Model.Hatchback", b =>
                {
                    b.HasBaseType("CarAuction.Model.BaseEntities.BaseVehicleEntity");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.ToTable("Hatchback", (string)null);
                });

            modelBuilder.Entity("CarAuction.Model.Sudan", b =>
                {
                    b.HasBaseType("CarAuction.Model.BaseEntities.BaseVehicleEntity");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.ToTable("Sudan", (string)null);
                });

            modelBuilder.Entity("CarAuction.Model.Suv", b =>
                {
                    b.HasBaseType("CarAuction.Model.BaseEntities.BaseVehicleEntity");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.ToTable("Suv", (string)null);
                });

            modelBuilder.Entity("CarAuction.Model.Truck", b =>
                {
                    b.HasBaseType("CarAuction.Model.BaseEntities.BaseVehicleEntity");

                    b.Property<double>("LoadCapacity")
                        .HasColumnType("double");

                    b.ToTable("Truck", (string)null);
                });

            modelBuilder.Entity("CarAuction.Model.Hatchback", b =>
                {
                    b.HasOne("CarAuction.Model.BaseEntities.BaseVehicleEntity", null)
                        .WithOne()
                        .HasForeignKey("CarAuction.Model.Hatchback", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarAuction.Model.Sudan", b =>
                {
                    b.HasOne("CarAuction.Model.BaseEntities.BaseVehicleEntity", null)
                        .WithOne()
                        .HasForeignKey("CarAuction.Model.Sudan", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarAuction.Model.Suv", b =>
                {
                    b.HasOne("CarAuction.Model.BaseEntities.BaseVehicleEntity", null)
                        .WithOne()
                        .HasForeignKey("CarAuction.Model.Suv", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarAuction.Model.Truck", b =>
                {
                    b.HasOne("CarAuction.Model.BaseEntities.BaseVehicleEntity", null)
                        .WithOne()
                        .HasForeignKey("CarAuction.Model.Truck", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
